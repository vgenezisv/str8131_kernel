/*******************************************************************************
 *
 *  Copyright(c) 2006 Star Semiconductor Corporation, All rights reserved.
 *
 *  This program is free software; you can redistribute it and/or modify it
 *  under the terms of the GNU General Public License as published by the Free
 *  Software Foundation; either version 2 of the License, or (at your option)
 *  any later version.
 *
 *  This program is distributed in the hope that it will be useful, but WITHOUT
 *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 *  more details.
 *
 *  You should have received a copy of the GNU General Public License along with
 *  this program; if not, write to the Free Software Foundation, Inc., 59
 *  Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 *
 *  The full GNU General Public License is included in this distribution in the
 *  file called LICENSE.
 *
 *  Contact Information:
 *  Technology Support <tech@starsemi.com>
 *  Star Semiconductor 4F, No.1, Chin-Shan 8th St, Hsin-Chu,300 Taiwan, R.O.C
 *
 ******************************************************************************/

#ifndef __STR9100_TOOL_H__
#define __STR9100_TOOL_H__

#include <linux/types.h>

#include <asm/ioctl.h>

/* magic number for STR9100_INFO IOCTL operations */ 
#define STR9100_INFO_MAGIC 'S' 

#define STR9100_INFO_IOCGETD	_IOR(STR9100_INFO_MAGIC, 1 , char *) //Get struct
#define STR9100_INFO_IOCSETD	_IOW(STR9100_INFO_MAGIC, 2 , char *) //Reversed Function
#define STR9100_INFO_IOCPUCLK	_IOR(STR9100_INFO_MAGIC, 10 , char *) //CPUCLK
#define STR9100_INFO_IOV18	_IOR(STR9100_INFO_MAGIC, 11 , char *) //Regulator 1.8V output
#define STR9100_INFO_IOPCICLK	_IOR(STR9100_INFO_MAGIC, 12 , char *) //PCI Clock
#define STR9100_INFO_IODRAMSZ	_IOR(STR9100_INFO_MAGIC, 13 , char *) //DRAM Size

// Max Data Struct Size
#define STR9100_INFO_SIZE 1024

extern char *get_flash_env(const char *env_name);

extern const char *get_flash_type(void);

#endif
